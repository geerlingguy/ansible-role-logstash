filter {


            if [fields][name_log] == "oio-grid" {
                  json {
                      source => "message"
                  }

            }

            if [fields][name_log] == "oio-access" {

              grok {
                    patterns_dir => ["/etc/logstash/conf.d/patterns"]
                    match => { "message" => "%{ACCESS_LOG}" }

              }
              ruby {
               code => "event.set('request_time', event.get('request_time').to_f / 1000000)"
             }

            }
            if [fields][name_log] == "oio-logs" {

             grok {
                   patterns_dir => ["/etc/logstash/conf.d/patterns"]
                   match => { "message" => "%{DEBUG_LOG}" }


                   }

            }
            if [fields][name_log] == "oio-swift" {

                grok {
                      patterns_dir => ["/etc/logstash/conf.d/patterns"]
                      match => { "message" => "%{SWIFT_LOG}" }


                }
                if ([bytes_sent]){

                    ruby {
                          code => "event.set('bytes_sent', event.get('bytes_sent').to_f / 1000000)"
                    }
                }
                if ([bytes_recvd]){

                    ruby {
                          code => "event.set('bytes_recvd', event.get('bytes_recvd').to_f / 1000000)"
                    }
                }


           }
           if [fields][name_log] == "oio-blob-indexer" {

               grok {
                     patterns_dir => ["/etc/logstash/conf.d/patterns"]
                     match => { "message" => "%{BLOB_INDEXER_LOG}" }


               }

          }
          if [fields][name_log] == "oio-errors" {

              grok {
                    patterns_dir => ["/etc/logstash/conf.d/patterns"]
                    match => { "message" => "%{ERROR_LOG}" }


                    }

         }
         if [fields][name_log] == "oio-redis" {

             grok {
                   patterns_dir => ["/etc/logstash/conf.d/patterns"]
                   match => { "message" => "%{REDIS_LOG}" }


            }
           # Drop meaningless lines from redis
           if ![log_timestamp] {
                drop { }
           }
        }
        if [fields][name_log] == "oio-account" {

            grok {
                  patterns_dir => ["/etc/logstash/conf.d/patterns"]
                  match => { "message" => "%{ACCOUNT_LOG}" }
            }
            ruby {
             code => "event.set('request_time', event.get('request_time').to_f / 1000000)"
           }

       }

    date {
         match => [ "log_timestamp" , "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ", "MMM dd HH:mm:ss", "dd MMM HH:mm:ss", "EEE MMM dd HH:mm:ss.SSSSSS yyyy" , "dd MMM HH:mm:ss.SSS"]
         remove_field => ["log_timestamp"]
    }
    date {
          match => [ "time" , "yyyy-MM-dd'T'HH:mm:ssZ"]
          remove_field => ["time"]
    }

    # Remove unnecessary fields sent by filebeat
    mutate {

      remove_field => [ "source", "_source", "beat", "_type", "offset", "@version", "datetime", "client_etag", "log_info", "time_tag", "input_type", "user_agent"]

    }



}
