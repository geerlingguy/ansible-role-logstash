#{{ ansible_managed }}
#http://blog.sematext.com/2015/01/19/grok-elasticsearch-logs-with-logstash/
#TODO activate slowlog
#http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/logging.html#slowlog
input {
  file { 
    path => "/var/log/elasticsearch/*.log"  # tail ES log and slowlogs
    type => "elasticsearch"
    start_position => "beginning"  # parse existing logs, too
    codec => multiline {   # put the whole exception in a single event
      pattern => "^\["
      negate => true
      what => "previous"
    }
  }
}

filter {
  if [type] == "elasticsearch" {
    grok {  # parses the common bits
      match => [ "message", "\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{DATA:severity}%{SPACE}\]\[%{DATA:log_source}%{SPACE}\]%{SPACE}\[%{DATA:node}\]%{SPACE}(?<message>(.|\r|\n)*)" ]
      overwrite => [ "message" ]
    }

    if "slowlog" in [path] {  # slowlog-specific parsing
      grok {  # parse the index name and the shard number
        match => [ "message", "\[%{DATA:index}\]\[%{DATA:shard}\]%{GREEDYDATA:kv_pairs}" ]
      }
      kv {    # parses named fields
        source => "kv_pairs"
        field_split => " \],"
        value_split => "\["
      }
    }

    date {  # use timestamp from the log
      "match" => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS" ]
      target => "@timestamp"
    }

    mutate {
      remove_field => [ "kv_pairs", "timestamp" ]  # remove unused stuff
      rename => {  # nicer field names (especially good for Logsene)
        "source" => "source_body"
        "log_source" => "source"
      }
      convert => {  # type numeric fields (they're strings by default)
        "took_millis" => "integer"
        "total_shards" => "integer"
        "shard" => "integer"
      }
    }

  }
}

#output {
#  elasticsearch {   # send everything to Logsene
#    host => "logsene-receiver.sematext.com"
#    ssl => true  # works with Logstash 1.5+
#    port => 443  # use 80 for plain HTTP
#    index => "LOGSENE-APP-TOKEN-GOES-HERE"  # fill in your token (click Integration from your Logsene app)
#    protocol => "http"
#    manage_template => false
#  }
#}
